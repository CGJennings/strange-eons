package ca.cgjennings.apps.arkham.editors;

import ca.cgjennings.apps.arkham.dialog.ErrorDialog;
import ca.cgjennings.apps.arkham.project.ProjectUtilities;
import ca.cgjennings.platform.AgnosticDialog;
import ca.cgjennings.platform.PlatformSupport;
import ca.cgjennings.ui.DocumentEventAdapter;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.IOException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.event.DocumentEvent;
import static resources.Language.string;

/**
 * Select images to incorporate into a card layout.
 *
 * @author Chris Jennings <https://cgjennings.ca/contact>
 */
@SuppressWarnings("serial")
class CLEImageChooser extends javax.swing.JDialog implements AgnosticDialog {

    /**
     * Creates new form CLEImageChooser
     */
    public CLEImageChooser(java.awt.Frame parent, boolean isPortrait, CardLayoutEditor.InternalImage[] images, CardLayoutEditor.InternalImage[] folders) {
        super(parent, true);
        initComponents();
        getRootPane().setDefaultButton(okBtn);
        PlatformSupport.makeAgnosticDialog(this, okBtn, cancelBtn);

        if (isPortrait) {
            setTitle(string("cle-add-portrait-title"));
            optionsPanel.setVisible(false);
        } else {
            portraitInfoLabel.setVisible(false);
        }

        existingCombo.setModel(new DefaultComboBoxModel<>(images));
        destCombo.setModel(new DefaultComboBoxModel<>(folders));

        if (images.length > 0) {
            existingCombo.setSelectedIndex(0);
            useExistingBtn.setSelected(true);
        }

        if (folders.length == 0) {
            importBtn.setEnabled(false);
        }

        sourceSelectionChanged(null);

        fileField.getDocument().addDocumentListener(new DocumentEventAdapter() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                validateDialog();
            }
        });

        pack();
        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sourceGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        importBtn = new javax.swing.JRadioButton();
        fileLabel = new javax.swing.JLabel();
        useExistingBtn = new javax.swing.JRadioButton();
        existingCombo = new javax.swing.JComboBox<>();
        emptyBtn = new javax.swing.JRadioButton();
        portraitInfoLabel = new javax.swing.JLabel();
        destLabel = new javax.swing.JLabel();
        destCombo = new javax.swing.JComboBox<>();
        fileField = new ca.cgjennings.ui.JFileField();
        optionsPanel = new javax.swing.JPanel();
        templateCheck = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        okBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(string( "cle-add-image-title" )); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(string( "cle-image-source" ))); // NOI18N

        sourceGroup.add(importBtn);
        importBtn.setText(string( "cle-is-import" )); // NOI18N
        importBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceSelectionChanged(evt);
            }
        });

        fileLabel.setText(string( "cle-is-file" )); // NOI18N

        sourceGroup.add(useExistingBtn);
        useExistingBtn.setText(string( "cle-is-existing" )); // NOI18N
        useExistingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceSelectionChanged(evt);
            }
        });

        existingCombo.setEditable(true);
        existingCombo.setMaximumRowCount(12);

        sourceGroup.add(emptyBtn);
        emptyBtn.setSelected(true);
        emptyBtn.setText(string( "cle-is-none" )); // NOI18N
        emptyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceSelectionChanged(evt);
            }
        });

        portraitInfoLabel.setFont(portraitInfoLabel.getFont().deriveFont(portraitInfoLabel.getFont().getSize()-1f));
        portraitInfoLabel.setText(string( "cle-is-portrait-info" )); // NOI18N

        destLabel.setText(string( "cle-is-import-folder" )); // NOI18N

        fileField.setFileType(ca.cgjennings.ui.JFileField.FileType.IMAGE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(importBtn)
                            .addComponent(useExistingBtn)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(destLabel)
                                    .addComponent(fileLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fileField, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                                    .addComponent(destCombo, 0, 400, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(existingCombo, 0, 469, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(emptyBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(portraitInfoLabel)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(portraitInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(useExistingBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(existingCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(importBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileLabel)
                    .addComponent(fileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destLabel)
                    .addComponent(destCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emptyBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        optionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(string( "cle-is-options" ))); // NOI18N

        templateCheck.setText(string( "cle-is-template" )); // NOI18N
        templateCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                templateCheckActionPerformed(evt);
            }
        });

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getSize()-1f));
        jLabel1.setText(string( "cle-is-template-info" )); // NOI18N

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getSize()-1f));
        jLabel2.setText(string( "cle-is-template-info2" )); // NOI18N

        javax.swing.GroupLayout optionsPanelLayout = new javax.swing.GroupLayout(optionsPanel);
        optionsPanel.setLayout(optionsPanelLayout);
        optionsPanelLayout.setHorizontalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(templateCheck)
                    .addGroup(optionsPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        optionsPanelLayout.setVerticalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(templateCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cancelBtn.setText(string( "cancel" )); // NOI18N

        okBtn.setText(string( "cle-is-ok" )); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(optionsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBtn)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelBtn, okBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn)
                    .addComponent(okBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void sourceSelectionChanged(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceSelectionChanged
            // update child controls
            boolean enable = useExistingBtn.isSelected();
            existingCombo.setEnabled(enable);

            enable = importBtn.isSelected();
            fileLabel.setEnabled(enable);
            fileField.setEnabled(enable);
            destLabel.setEnabled(enable);
            destCombo.setEnabled(enable);

            enable = !emptyBtn.isSelected();
            templateCheck.setEnabled(enable);
            if (!enable) {
                templateCheck.setSelected(false);
            } else {
                templateCheck.setSelected(templateMode);
            }
	}//GEN-LAST:event_sourceSelectionChanged

	private void templateCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_templateCheckActionPerformed
            if (templateCheck.isEnabled()) {
                templateMode = templateCheck.isSelected();
            }
}//GEN-LAST:event_templateCheckActionPerformed

    private void validateDialog() {
        JButton ok = PlatformSupport.getAgnosticOK(true, okBtn, cancelBtn);
        boolean enable = true;
        if (importBtn.isSelected()) {
            String file = fileField.getText().trim();
            if (file.isEmpty() || !(new File(file).exists())) {
                enable = false;
            }
        }
        ok.setEnabled(enable);
    }

    public String showDialog() {
        resource = null;
        setVisible(true);
        return resource;
    }

    public boolean isTemplateModeSelected() {
        return templateMode;
    }

    private String resource;
    private boolean templateMode = false;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox<CardLayoutEditor.InternalImage> destCombo;
    private javax.swing.JLabel destLabel;
    private javax.swing.JRadioButton emptyBtn;
    private javax.swing.JComboBox<CardLayoutEditor.InternalImage> existingCombo;
    private ca.cgjennings.ui.JFileField fileField;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JRadioButton importBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton okBtn;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JLabel portraitInfoLabel;
    private javax.swing.ButtonGroup sourceGroup;
    private javax.swing.JCheckBox templateCheck;
    private javax.swing.JRadioButton useExistingBtn;
    // End of variables declaration//GEN-END:variables

    @Override
    public void handleOKAction(ActionEvent evt) {
        if (useExistingBtn.isSelected()) {
            resource = existingCombo.getSelectedItem().toString();
        } else if (importBtn.isSelected()) {
            CardLayoutEditor.InternalImage ii = (CardLayoutEditor.InternalImage) destCombo.getSelectedItem();
            File source = new File(fileField.getText());
            File dest = new File(ii.file, source.getName());
            dest = ProjectUtilities.getAvailableFile(dest);
            try {
                ProjectUtilities.copyFile(source, dest);
            } catch (IOException e) {
                ErrorDialog.displayError(string(""), e);
                return;
            }
            resource = ii.path + "/" + source.getName();
        } else {
            resource = "";
        }

        dispose();
    }

    @Override
    public void handleCancelAction(ActionEvent e) {
        dispose();
    }
}
