package ca.cgjennings.apps.arkham.generic;

import ca.cgjennings.apps.arkham.*;
import ca.cgjennings.spelling.ui.JSpellingTextArea;
import ca.cgjennings.spelling.ui.JSpellingTextField;
import ca.cgjennings.ui.DocumentEventAdapter;
import javax.swing.event.DocumentEvent;
import static resources.Language.string;

/**
 * Editor for "generic cards", that is, subclasses of
 * {@link GenericCardBase}, a set of basic general purpose
 * cards for exploration and  prototyping.
 *
 * @author Chris Jennings <https://cgjennings.ca/contact>
 * @since 3.4
 */
@SuppressWarnings("serial")
public final class GenericCardEditor extends AbstractGameComponentEditor<GenericCardBase> {

    /**
     * Creates a new editor for markers. The editor will initially contain a
     * default marker.
     */
    public GenericCardEditor() {
        this(null);
    }

    /**
     * Creates a new editor for the specified marker.
     *
     * @param m the marker to be edited
     */
    public GenericCardEditor(GenericCardBase gc) {
        initComponents();
        localizeForPlatform();
        if (gc == null) {
            gc = new GenericTarotSizeCard();
        }
        replaceEditedComponent(gc);
        initializeSheetViewers(frontBackPane);
        populateFieldsFromComponent();
        getGameComponent().markSaved();
        createTimer();
    }

    @Override
    public void replaceEditedComponent(GenericCardBase card) {
        super.replaceEditedComponent(card);
        portraitPanel.setPortrait(card.getPortrait(0));
        frontDesignPortrait.setPortrait(card.getPortrait(1));
        backDesignPortrait.setPortrait(card.getPortrait(2));                
    }
    
    @Override
    public void populateFieldsFromComponent() {
        super.populateFieldsFromComponent();
        GenericCardBase gc = getGameComponent();
        fillCheck.setSelected(gc.isInteriorFilled());
        portraitFirstCheck.setSelected(gc.isPortraitUnderFace());
        titleField.setText(gc.getTitle());
        textField.setText(gc.getText());
        titleFamily.setText(gc.getTitleFamily());
        bodyFamily.setText(gc.getTextFamily());
        sizeSpinner.setValue(gc.getBaseFontSize());
        
        DocumentEventAdapter dea = new DocumentEventAdapter() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                GenericCardBase gc = getGameComponent();
                gc.setTitle(titleField.getText());
                gc.setText(textField.getText());
            }
        };
        titleField.getDocument().addDocumentListener(dea);
        textField.getDocument().addDocumentListener(dea);
        super.populateFieldsFromComponent();
    }
    
    @Override
    public void populateComponentFromDelayedFields() {
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        filterField = new ca.cgjennings.ui.JFilterField();
        javax.swing.JTabbedPane editTabs = new javax.swing.JTabbedPane();
        javax.swing.JPanel contentTab = new javax.swing.JPanel();
        javax.swing.JLabel nameLabel = new javax.swing.JLabel();
        titleField = new JSpellingTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        textField = new javax.swing.JTextArea();
        portraitPanel = new ca.cgjennings.apps.arkham.PortraitPanel();
        textOnlyCheck = new javax.swing.JCheckBox();
        javax.swing.JPanel designTab = new javax.swing.JPanel();
        frontDesignPortrait = new ca.cgjennings.apps.arkham.PortraitPanel();
        backDesignPortrait = new ca.cgjennings.apps.arkham.PortraitPanel();
        designOptionPanel = new javax.swing.JPanel();
        javax.swing.JLabel typeLabel = new javax.swing.JLabel();
        titleFamily = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        bodyFamily = new javax.swing.JTextField();
        bodyLabel = new javax.swing.JLabel();
        sizeSpinner = new javax.swing.JSpinner();
        sizeLabel = new javax.swing.JLabel();
        fillCheck = new javax.swing.JCheckBox();
        portraitFirstCheck = new javax.swing.JCheckBox();
        javax.swing.JPanel commentTab = new javax.swing.JPanel();
        rationalePanel = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        commentField = new JSpellingTextArea();
        frontBackPane = new javax.swing.JTabbedPane();

        filterField.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, java.awt.Color.gray), javax.swing.BorderFactory.createEmptyBorder(2, 4, 2, 4)));
        filterField.setName("filterField"); // NOI18N

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setName("Form"); // NOI18N
        getContentPane().setLayout(new java.awt.GridBagLayout());

        editTabs.setName("editTabs"); // NOI18N

        contentTab.setName("contentTab"); // NOI18N

        nameLabel.setLabelFor(titleField);
        nameLabel.setText(string("gencard-title")); // NOI18N
        nameLabel.setName("nameLabel"); // NOI18N

        titleField.setDragEnabled(true);
        titleField.setName("titleField"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        textField.setColumns(20);
        textField.setLineWrap(true);
        textField.setRows(5);
        textField.setTabSize(4);
        textField.setWrapStyleWord(true);
        textField.setName("textField"); // NOI18N
        jScrollPane2.setViewportView(textField);

        portraitPanel.setName("portraitPanel"); // NOI18N

        textOnlyCheck.setText(string("gencard-text-only")); // NOI18N
        textOnlyCheck.setName("textOnlyCheck"); // NOI18N
        textOnlyCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textOnlyCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentTabLayout = new javax.swing.GroupLayout(contentTab);
        contentTab.setLayout(contentTabLayout);
        contentTabLayout.setHorizontalGroup(
            contentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(portraitPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                    .addGroup(contentTabLayout.createSequentialGroup()
                        .addComponent(nameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(contentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(contentTabLayout.createSequentialGroup()
                                .addComponent(textOnlyCheck)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(titleField))))
                .addContainerGap())
        );
        contentTabLayout.setVerticalGroup(
            contentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(portraitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textOnlyCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addContainerGap())
        );

        editTabs.addTab(string("gencard-content"), contentTab); // NOI18N

        designTab.setName("designTab"); // NOI18N

        frontDesignPortrait.setName("frontDesignPortrait"); // NOI18N
        frontDesignPortrait.setPanelTitle(string("gencard-front-design")); // NOI18N

        backDesignPortrait.setName("backDesignPortrait"); // NOI18N
        backDesignPortrait.setPanelTitle(string("gencard-back-design")); // NOI18N

        designOptionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(string("me-front-text"))); // NOI18N
        designOptionPanel.setName("designOptionPanel"); // NOI18N

        typeLabel.setText(string("gencard-typeface")); // NOI18N
        typeLabel.setName("typeLabel"); // NOI18N

        titleFamily.setColumns(10);
        titleFamily.setName("titleFamily"); // NOI18N
        titleFamily.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                familyFieldFocusLost(evt);
            }
        });
        titleFamily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                familyFieldActionPerformed(evt);
            }
        });

        titleLabel.setLabelFor(titleFamily);
        titleLabel.setText(string("gencard-title-family")); // NOI18N
        titleLabel.setName("titleLabel"); // NOI18N

        bodyFamily.setColumns(10);
        bodyFamily.setName("bodyFamily"); // NOI18N
        bodyFamily.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                familyFieldFocusLost(evt);
            }
        });
        bodyFamily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                familyFieldActionPerformed(evt);
            }
        });

        bodyLabel.setLabelFor(bodyFamily);
        bodyLabel.setText(string("gencard-body-family")); // NOI18N
        bodyLabel.setName("bodyLabel"); // NOI18N

        sizeSpinner.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(8.0f), Float.valueOf(6.0f), Float.valueOf(72.0f), Float.valueOf(0.25f)));
        sizeSpinner.setName("sizeSpinner"); // NOI18N
        sizeSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sizeSpinnerStateChanged(evt);
            }
        });

        sizeLabel.setLabelFor(sizeSpinner);
        sizeLabel.setText(string("gencard-body-size")); // NOI18N
        sizeLabel.setName("sizeLabel"); // NOI18N

        fillCheck.setText(string("gencard-fill-text-area")); // NOI18N
        fillCheck.setName("fillCheck"); // NOI18N
        fillCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillCheckActionPerformed(evt);
            }
        });

        portraitFirstCheck.setText(string("gencard-portrait-under-face")); // NOI18N
        portraitFirstCheck.setName("portraitFirstCheck"); // NOI18N
        portraitFirstCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portraitFirstCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout designOptionPanelLayout = new javax.swing.GroupLayout(designOptionPanel);
        designOptionPanel.setLayout(designOptionPanelLayout);
        designOptionPanelLayout.setHorizontalGroup(
            designOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(designOptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(designOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(designOptionPanelLayout.createSequentialGroup()
                        .addGroup(designOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(designOptionPanelLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(titleLabel))
                            .addGroup(designOptionPanelLayout.createSequentialGroup()
                                .addComponent(typeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(titleFamily)))
                        .addGap(23, 23, 23)
                        .addGroup(designOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bodyFamily)
                            .addComponent(bodyLabel))
                        .addGap(18, 18, 18)
                        .addGroup(designOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sizeLabel)
                            .addComponent(sizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(designOptionPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(designOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(portraitFirstCheck)
                            .addComponent(fillCheck))))
                .addContainerGap())
        );
        designOptionPanelLayout.setVerticalGroup(
            designOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(designOptionPanelLayout.createSequentialGroup()
                .addGroup(designOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(bodyLabel)
                    .addComponent(sizeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(designOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeLabel)
                    .addComponent(titleFamily, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bodyFamily, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fillCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(portraitFirstCheck)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout designTabLayout = new javax.swing.GroupLayout(designTab);
        designTab.setLayout(designTabLayout);
        designTabLayout.setHorizontalGroup(
            designTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(designTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(designTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(designOptionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(designTabLayout.createSequentialGroup()
                        .addGroup(designTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(backDesignPortrait, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(frontDesignPortrait, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        designTabLayout.setVerticalGroup(
            designTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(designTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(designOptionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frontDesignPortrait, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backDesignPortrait, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        editTabs.addTab(string("gencard-design"), designTab); // NOI18N

        commentTab.setName("commentTab"); // NOI18N

        rationalePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(string("ae-panel-drc"))); // NOI18N
        rationalePanel.setName("rationalePanel"); // NOI18N

        jLabel19.setText(string("ae-l-drc")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        jScrollPane7.setName("jScrollPane7"); // NOI18N

        commentField.setColumns(20);
        commentField.setLineWrap(true);
        commentField.setRows(5);
        commentField.setTabSize(4);
        commentField.setWrapStyleWord(true);
        commentField.setDragEnabled(true);
        commentField.setName("commentField"); // NOI18N
        jScrollPane7.setViewportView(commentField);

        javax.swing.GroupLayout rationalePanelLayout = new javax.swing.GroupLayout(rationalePanel);
        rationalePanel.setLayout(rationalePanelLayout);
        rationalePanelLayout.setHorizontalGroup(
            rationalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rationalePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rationalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rationalePanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE))
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE))
                .addContainerGap())
        );
        rationalePanelLayout.setVerticalGroup(
            rationalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rationalePanelLayout.createSequentialGroup()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout commentTabLayout = new javax.swing.GroupLayout(commentTab);
        commentTab.setLayout(commentTabLayout);
        commentTabLayout.setHorizontalGroup(
            commentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commentTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rationalePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        commentTabLayout.setVerticalGroup(
            commentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commentTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rationalePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        rationalePanel.getAccessibleContext().setAccessibleName(string("ae-panel-drc")); // NOI18N

        editTabs.addTab(string("ae-tab-comments"), commentTab); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(editTabs, gridBagConstraints);

        frontBackPane.setMinimumSize(new java.awt.Dimension(1, 1));
        frontBackPane.setName("frontBackPane"); // NOI18N
        frontBackPane.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(frontBackPane, gridBagConstraints);

        setBounds(0, 0, 822, 682);
    }// </editor-fold>//GEN-END:initComponents

    private void familyFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_familyFieldActionPerformed
        GenericCardBase gc = getGameComponent();
        gc.setTextFamily(bodyFamily.getText());
        gc.setTitleFamily(titleFamily.getText());
    }//GEN-LAST:event_familyFieldActionPerformed

    private void familyFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_familyFieldFocusLost
        familyFieldActionPerformed(null);
    }//GEN-LAST:event_familyFieldFocusLost

    private void fillCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillCheckActionPerformed
        getGameComponent().setInteriorFilled(fillCheck.isSelected());
    }//GEN-LAST:event_fillCheckActionPerformed

    private void portraitFirstCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portraitFirstCheckActionPerformed
        getGameComponent().setPortraitUnderFace(portraitFirstCheck.isSelected());
    }//GEN-LAST:event_portraitFirstCheckActionPerformed

    private void sizeSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sizeSpinnerStateChanged
        getGameComponent().setBaseFontSize((float)sizeSpinner.getValue());
    }//GEN-LAST:event_sizeSpinnerStateChanged

    private void textOnlyCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textOnlyCheckActionPerformed
        getGameComponent().setTextOnly(textOnlyCheck.isSelected());
    }//GEN-LAST:event_textOnlyCheckActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ca.cgjennings.apps.arkham.PortraitPanel backDesignPortrait;
    private javax.swing.JTextField bodyFamily;
    private javax.swing.JLabel bodyLabel;
    private javax.swing.JTextArea commentField;
    private javax.swing.JPanel designOptionPanel;
    private javax.swing.JCheckBox fillCheck;
    private ca.cgjennings.ui.JFilterField filterField;
    private javax.swing.JTabbedPane frontBackPane;
    private ca.cgjennings.apps.arkham.PortraitPanel frontDesignPortrait;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JCheckBox portraitFirstCheck;
    private ca.cgjennings.apps.arkham.PortraitPanel portraitPanel;
    private javax.swing.JPanel rationalePanel;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JSpinner sizeSpinner;
    private javax.swing.JTextArea textField;
    private javax.swing.JCheckBox textOnlyCheck;
    private javax.swing.JTextField titleFamily;
    private javax.swing.JTextField titleField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

}
