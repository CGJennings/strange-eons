package ca.cgjennings.apps.arkham.project;

import ca.cgjennings.apps.arkham.deck.CustomPaperDialog;
import ca.cgjennings.apps.arkham.deck.PaperProperties;
import ca.cgjennings.apps.arkham.deck.PaperSets;
import ca.cgjennings.platform.AgnosticDialog;
import ca.cgjennings.platform.PlatformSupport;
import ca.cgjennings.ui.FilteredDocument;
import java.awt.event.ActionEvent;
import java.util.HashMap;
import java.util.Set;
import javax.swing.JCheckBox;
import static resources.Language.string;
import resources.Settings;

/**
 * Configuration dialog for automatic deck layout action ({@link MakeDeck}).
 *
 * @author Chris Jennings <https://cgjennings.ca/contact>
 */
@SuppressWarnings("serial")
class MakeDeckDialog extends javax.swing.JDialog implements AgnosticDialog {

    /**
     * Creates new form MakeDeckDialog
     */
    public MakeDeckDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getRootPane().setDefaultButton(okBtn);
        PlatformSupport.makeAgnosticDialog(this, okBtn, cancelBtn);

        getBoolean("deck-pack-twoside", doubleSideCheck);
        getBoolean("deck-pack-group", groupsCheck);
        getBoolean("deck-pack-bleed-margin", bleedCheck);
        qualitySlider.setValue(Settings.getUser().getInt("deck-pack-layout-quality") + 1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelBtn = new javax.swing.JButton();
        okBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        qualitySlider = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        deckField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        paperSizeCombo = new javax.swing.JComboBox<>();
        doubleSideCheck = new javax.swing.JCheckBox();
        groupsCheck = new javax.swing.JCheckBox();
        customPaperBtn = new javax.swing.JButton();
        bleedCheck = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(string( "pa-makedeck" )); // NOI18N

        cancelBtn.setText(string( "cancel" )); // NOI18N

        okBtn.setText(string( "pa-makedeck-ok" )); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(string( "pa-makedeck-granularity" ))); // NOI18N

        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getSize()-1f));
        jLabel6.setText(string( "pa-makedeck-granularity-info" )); // NOI18N

        jLabel7.setFont(jLabel7.getFont().deriveFont(jLabel7.getFont().getSize()-1f));
        jLabel7.setText(string( "pa-makedeck-granularity-info2" )); // NOI18N

        jLabel8.setFont(jLabel8.getFont().deriveFont(jLabel8.getFont().getSize()-1f));
        jLabel8.setText(string( "pa-makedeck-granularity-info3" )); // NOI18N

        jLabel5.setText(string( "pa-makedeck-speed" )); // NOI18N
        jPanel2.add(jLabel5);

        qualitySlider.setFont(qualitySlider.getFont().deriveFont(qualitySlider.getFont().getSize()-1f));
        qualitySlider.setMajorTickSpacing(1);
        qualitySlider.setMaximum(10);
        qualitySlider.setMinimum(1);
        qualitySlider.setPaintLabels(true);
        qualitySlider.setPaintTicks(true);
        qualitySlider.setSnapToTicks(true);
        qualitySlider.setValue(3);
        jPanel2.add(qualitySlider);

        jLabel4.setText(string( "pa-makedeck-fit" )); // NOI18N
        jPanel2.add(jLabel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(1, 1, 1)
                .addComponent(jLabel7)
                .addGap(1, 1, 1)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(string( "pa-makedeck-layout" ))); // NOI18N

        jLabel1.setLabelFor(deckField);
        jLabel1.setText(string( "pa-makedeck-file" )); // NOI18N

        deckField.setColumns(40);
        deckField.setDocument( FilteredDocument.createFileNameDocument() );
        deckField.setText("deck");

        jLabel3.setLabelFor(paperSizeCombo);
        jLabel3.setText(string( "de-l-paper-size" )); // NOI18N

        jLabel2.setText(".eon");

        paperSizeCombo.setMaximumRowCount(12);
        paperSizeCombo.setRenderer( PaperSets.createListCellRenderer() );
        initPaperSizes( null );

        doubleSideCheck.setSelected(true);
        doubleSideCheck.setText(string( "pa-makedeck-twoside" )); // NOI18N

        groupsCheck.setSelected(true);
        groupsCheck.setText(string( "pa-makedeck-groups" )); // NOI18N

        customPaperBtn.setText(string( "de-b-cust-paper" )); // NOI18N
        customPaperBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customPaperBtnActionPerformed(evt);
            }
        });

        bleedCheck.setSelected(true);
        bleedCheck.setText(string("pa-makedeck-bleed-margin")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bleedCheck)
                    .addComponent(groupsCheck)
                    .addComponent(doubleSideCheck)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(deckField, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel2))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(paperSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(customPaperBtn)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(deckField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paperSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(customPaperBtn))
                .addGap(18, 18, 18)
                .addComponent(doubleSideCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(groupsCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bleedCheck)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBtn))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelBtn, okBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn)
                    .addComponent(okBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void customPaperBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customPaperBtnActionPerformed
            PaperProperties sel = (PaperProperties) paperSizeCombo.getSelectedItem();

            CustomPaperDialog cpd = new CustomPaperDialog(customPaperBtn, sel, true);
            PaperProperties selected = cpd.showDialog();
            initPaperSizes(selected != null ? selected : sel);
	}//GEN-LAST:event_customPaperBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bleedCheck;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton customPaperBtn;
    private javax.swing.JTextField deckField;
    private javax.swing.JCheckBox doubleSideCheck;
    private javax.swing.JCheckBox groupsCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton okBtn;
    private javax.swing.JComboBox<PaperProperties> paperSizeCombo;
    private javax.swing.JSlider qualitySlider;
    // End of variables declaration//GEN-END:variables

    private void initPaperSizes(PaperProperties selection) {
        HashMap<Object, Object> attr = new HashMap<>();
        attr.put(PaperSets.KEY_CONCRETENESS, PaperSets.VALUE_CONCRETENESS_PHYSICAL);
        Set<PaperProperties> papers = PaperSets.getMatchingPapers(attr);
        if (selection == null) {
            selection = PaperSets.getDefaultPaper(papers);
        } else {
            selection = PaperSets.findBestPaper(selection, papers);
        }
        paperSizeCombo.setModel(PaperSets.setToComboBoxModel(papers));
        paperSizeCombo.setSelectedItem(selection);
    }

    @Override
    public void handleOKAction(ActionEvent e) {
        packer = new DeckPacker();
        packer.setLayoutQuality(qualitySlider.getValue() - 1);
        packer.setPaper((PaperProperties) paperSizeCombo.getSelectedItem());
        packer.setLayoutDoubleSided(doubleSideCheck.isSelected());
        packer.setGroupingEnabled(groupsCheck.isSelected());
        packer.setBleedMarginEnabled(bleedCheck.isSelected());
        setBoolean("deck-pack-twoside", doubleSideCheck);
        setBoolean("deck-pack-group", groupsCheck);
        setBoolean("deck-pack-bleed-margin", bleedCheck);
        Settings.getUser().set("deck-pack-layout-quality", "" + (qualitySlider.getValue() - 1));
        dispose();
    }

    private void setBoolean(String name, JCheckBox box) {
        Settings.getUser().set(name, box.isSelected() ? "yes" : "no");
    }

    private void getBoolean(String name, JCheckBox box) {
        String val = Settings.getUser().get(name);
        if (val != null) {
            box.setSelected(Settings.yesNo(val));
        }
    }

    public String getSelectedFileName() {
        String name = deckField.getText();
        if (!name.endsWith(".eon")) {
            name += ".eon";
        }
        return name;
    }

    @Override
    public void handleCancelAction(ActionEvent e) {
        dispose();
    }

    public DeckPacker showDialog() {
        packer = null;
        setVisible(true);
        return packer;
    }

    private DeckPacker packer;
}
