package ca.cgjennings.apps.arkham.deck.item;

import ca.cgjennings.apps.arkham.ColourDialog.ColourButton;
import ca.cgjennings.apps.arkham.HSBPanel;
import java.awt.Color;
import java.text.NumberFormat;
import java.text.ParseException;
import static resources.Language.string;

/**
 * The style panel for editing master opacity.
 *
 * @author Chris Jennings <https://cgjennings.ca/contact>
 * @since 3.0
 */
@SuppressWarnings("serial")
class MasterOpacityStylePanel extends AbstractStylePanel<MasterOpacityStylePanel> implements MasterOpacityStyle {

    private NumberFormat formatter;

    public MasterOpacityStylePanel() {
        initComponents();
        formatter = NumberFormat.getPercentInstance();
        formatter.setMaximumFractionDigits(1);
        formatter.setMinimumFractionDigits(1);
        HSBPanel.takeOverSlider(opacityLabel, opacitySlider);
        opacitySliderStateChanged(null);
    }

    @Override
    public String getTitle() {
        return string("cd-l-opacity");
    }

    @Override
    public void setOpacity(float opacity) {
        update(opacity);
    }

    @Override
    public float getOpacity() {
        return opacity;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opacityLabel = new ca.cgjennings.ui.OpacityLabel();
        opacitySlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        opacityField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        opacitySwatch = new ColourButton();

        opacityLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        opacityLabel.setText("opacityLabel1");

        opacitySlider.setMajorTickSpacing(500);
        opacitySlider.setMaximum(1000);
        opacitySlider.setValue(1000);
        opacitySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                opacitySliderStateChanged(evt);
            }
        });

        jLabel1.setText("0%");

        opacityField.setColumns(6);
        opacityField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        opacityField.setText("100.0%");
        opacityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opacityFieldActionPerformed(evt);
            }
        });
        opacityField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                opacityFieldFocusLost(evt);
            }
        });

        jLabel2.setText("100%");

        opacitySwatch.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        opacitySwatch.setContentAreaFilled(false);
        opacitySwatch.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(opacitySwatch, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(opacityLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(opacitySlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(opacityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(opacitySwatch, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(opacitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(opacityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(opacityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void opacitySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_opacitySliderStateChanged
        opacity = opacitySlider.getValue() / 1000f;
        opacityField.setText(formatter.format(opacity));
        opacitySwatch.setBackground(
                new Color(255, 0, 0, Math.round(opacity * 255f))
        );
        styleChanged();
    }//GEN-LAST:event_opacitySliderStateChanged

    private void opacityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opacityFieldActionPerformed
        if (!opacityUpdate) {
            opacityUpdate = true;
            float val = opacity;
            try {
                val = formatter.parse(opacityField.getText()).floatValue();
            } catch (ParseException e) {
            }
            update(val);
            opacityUpdate = false;
        }
    }//GEN-LAST:event_opacityFieldActionPerformed

    private void update(float opacity) {
        int op = Math.round(opacity * 1000f);
        if (op < 0) {
            op = 0;
        }
        if (op > 1_000) {
            op = 1_000;
        }

        // this will set "opacity" and update the swatch and field
        opacitySlider.setValue(op);
    }

    private void opacityFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opacityFieldFocusLost
        opacityFieldActionPerformed(null);
    }//GEN-LAST:event_opacityFieldFocusLost

    private float opacity = 1f;
    private boolean opacityUpdate;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField opacityField;
    private ca.cgjennings.ui.OpacityLabel opacityLabel;
    private javax.swing.JSlider opacitySlider;
    private javax.swing.JButton opacitySwatch;
    // End of variables declaration//GEN-END:variables

    @Override
    public int getPanelGroup() {
        return 900;
    }
}
