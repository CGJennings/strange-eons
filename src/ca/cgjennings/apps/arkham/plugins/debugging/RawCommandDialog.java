package ca.cgjennings.apps.arkham.plugins.debugging;

import ca.cgjennings.ui.JUtilities;
import javax.swing.DefaultComboBoxModel;

/**
 * This dialog is used to debug the debug server by sending raw commands to the
 * server and viewing the reply. It is started from the debugging client by
 * pressing Ctrl+R.
 *
 * @author Chris Jennings <https://cgjennings.ca/contact>
 * @since 3.0
 */
@SuppressWarnings("serial")
public class RawCommandDialog extends javax.swing.JDialog {

    /**
     * Creates a new raw command dialog.
     */
    public RawCommandDialog(Client parent) {
        super(parent, true);
        JUtilities.makeUtilityWindow(this);
        initComponents();
        DefaultComboBoxModel m = new DefaultComboBoxModel(Command.values());
        m.addElement("ADJ");
        command.setModel(m);
        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        command = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        args = new javax.swing.JTextArea();
        sendBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        reply = new javax.swing.JTextArea();
        argLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Send Raw Commands");

        command.setEditable(true);
        command.setMaximumRowCount(16);
        command.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandActionPerformed(evt);
            }
        });

        args.setColumns(20);
        args.setRows(5);
        args.setTabSize(4);
        args.setDragEnabled(true);
        args.setDropMode(javax.swing.DropMode.INSERT);
        jScrollPane1.setViewportView(args);

        sendBtn.setMnemonic('s');
        sendBtn.setText("Send");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        reply.setEditable(false);
        reply.setColumns(20);
        reply.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        reply.setRows(5);
        reply.setTabSize(4);
        reply.setDragEnabled(true);
        reply.setDropMode(javax.swing.DropMode.INSERT);
        jScrollPane2.setViewportView(reply);

        argLabel.setText("    ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(command, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(argLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(sendBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(command, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(argLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
            Client c = (Client) getParent();
            Object cmd = command.getSelectedItem();
            if (cmd == null) {
                return;
            }
            String[] argArray = args.getText().split("\n");
            String[] result = c.send(cmd.toString(), true, argArray);

            StringBuilder b = new StringBuilder();
            for (int i = 0; i < result.length; ++i) {
                if (b.length() > 0) {
                    b.append('\n');
                }
                b.append(result[i]);
            }
            reply.setText(b.toString());
            reply.select(0, 0);
	}//GEN-LAST:event_sendBtnActionPerformed

    private void commandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandActionPerformed
        Object sel = command.getSelectedItem();
        String argText;
        if (sel instanceof Command) {
            argText = "Arity: " + ((Command) sel).getArgCount();
        } else {
            argText = "    ";
        }
        argLabel.setText(argText);
    }//GEN-LAST:event_commandActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel argLabel;
    private javax.swing.JTextArea args;
    private javax.swing.JComboBox command;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea reply;
    private javax.swing.JButton sendBtn;
    // End of variables declaration//GEN-END:variables
}
