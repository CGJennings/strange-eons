package ca.cgjennings.apps.arkham.plugins;

import ca.cgjennings.apps.arkham.StrangeEons;
import ca.cgjennings.apps.arkham.TextEncoding;
import ca.cgjennings.apps.arkham.dialog.ErrorDialog;
import ca.cgjennings.apps.arkham.project.ProjectUtilities;
import ca.cgjennings.platform.DesktopIntegration;
import ca.cgjennings.text.MarkdownTransformer;
import ca.cgjennings.ui.EditorPane;
import ca.cgjennings.ui.theme.Theme;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StringWriter;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.logging.Level;
import javax.swing.UIManager;
import javax.swing.event.HyperlinkEvent;
import static resources.Language.string;

/**
 * Dialog used to display the installation notes for a plug-in.
 *
 * @author Chris Jennings <https://cgjennings.ca/contact>
 * @since 2.0
 */
@SuppressWarnings("serial")
public final class InstallationNotesViewer extends javax.swing.JDialog {

    private InstallationNotesViewer() {
        super(StrangeEons.getWindow(), true);
        initComponents();
        setLocationRelativeTo(getParent());
        view.addHyperlinkListener((HyperlinkEvent e) -> {
            if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                URL url = e.getURL();
                if (url != null) {
                    try {
                        String proto = url.getProtocol();
                        if (proto.equals("jar") || proto.equals("res") || proto.equals("project")) {
                            view.setPage(url);
                        } else if (DesktopIntegration.BROWSE_SUPPORTED) {
                            try {
                                DesktopIntegration.browse(url.toURI());
                            } catch (URISyntaxException ex) {
                                StrangeEons.log.log(Level.WARNING, "" + url, e);
                            }
                        }
                    } catch (IOException ex) {
                        view.setText(ex.toString());
                    }
                } else {
                    StrangeEons.log.log(Level.WARNING, "activated invalid URL: {0}", e.getDescription());
                }
            }
        });
    }

    public InstallationNotesViewer(java.awt.Frame parent, String content) {
        this();
        view.setText(content);
    }

    public InstallationNotesViewer(java.awt.Frame parent, URL content) {
        this();
        setPage(content);
    }
    
    public void setPage(String html) {
        view.setText(html);
    }
        
    public void setPage(URL url) {
        try {
            if (url == null) {
                view.setText("<html></html>");
            } else if (url.getPath().endsWith(".md")) {
                try (InputStreamReader in = new InputStreamReader(url.openStream(), TextEncoding.UTF8_CS)) {
                    StringWriter sw = new StringWriter();
                    ProjectUtilities.copyReader(in, sw);
                    String html = new MarkdownTransformer().toHtmlDocument(sw.toString());
                    view.setText(html);
                }
            } else {
                view.setPage(url);
            }
        } catch (IOException ex) {
            ErrorDialog.displayError("", ex);
        }
    }
    
    private static String fromMarkdown(String content) {
        return new MarkdownTransformer().toHtmlDocument(content);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        view = new EditorPane();
        closeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(string( "plug-readme" )); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, java.awt.Color.gray));

        view.setEditable(false);
        view.setBackground(UIManager.getColor(Theme.PLUGIN_README_BACKGROUND));
        view.setContentType("text/html"); // NOI18N
        view.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        view.setForeground(UIManager.getColor(Theme.PLUGIN_README_FOREGROUND));
        jScrollPane1.setViewportView(view);

        closeBtn.setText(string("close")); // NOI18N
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(441, Short.MAX_VALUE)
                .addComponent(closeBtn)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
    dispose();
}//GEN-LAST:event_closeBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JEditorPane view;
    // End of variables declaration//GEN-END:variables
}
