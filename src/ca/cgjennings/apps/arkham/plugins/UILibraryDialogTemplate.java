package ca.cgjennings.apps.arkham.plugins;

import ca.cgjennings.platform.AgnosticDialog;
import ca.cgjennings.platform.PlatformSupport;
import java.awt.Component;
import java.awt.GridBagConstraints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Icon;
import javax.swing.JButton;
import static resources.Language.string;

/**
 * This dialog class is used to help create dialogs from containers in the
 * uilayout scripting library.
 *
 * This class is public only to allow access from script code; there is no need
 * for regular code to refer to this class.
 *
 * @author Chris Jennings <https://cgjennings.ca/contact>
 * @since 2.1
 */
@SuppressWarnings("serial")
public final class UILibraryDialogTemplate extends javax.swing.JDialog implements AgnosticDialog {

    /**
     * Creates new form UILibraryDialogTemplate
     */
    public UILibraryDialogTemplate(java.awt.Frame parent, boolean modal, Component content, Icon icon, String okText, String cancelText) {
        super(parent, modal);
        initComponents();

        this.content = content;

        if (icon == null) {
            this.icon.setVisible(false);
        }

        getRootPane().setDefaultButton(okBtn);

        GridBagConstraints cons = new GridBagConstraints();
        cons.gridx = 2;
        cons.gridy = 1;
        cons.fill = GridBagConstraints.BOTH;
        cons.weightx = cons.weighty = 1d;
        cons.anchor = GridBagConstraints.PAGE_START;

        add(content, cons);

        if (okText != null) {
            okBtn.setText(okText);
        }
        if (cancelText != null) {
            cancelBtn.setText(cancelText);
        }

        if (okText != null && okText.isEmpty()) {
            okBtn.setVisible(false);
            hasOK = false;
            if (cancelText != null && cancelText.isEmpty()) {
                okCancelPanel.setVisible(false);
                hasCancel = false;
            } else {
                cancelBtn.addActionListener(this::handleCancelAction);
                if (cancelText == null) {
                    cancelBtn.setText(string("close"));
                    getRootPane().setDefaultButton(cancelBtn);
                }
            }
        } else {
            if (cancelText != null && cancelText.isEmpty()) {
                cancelBtn.setVisible(false);
                hasCancel = false;
            } else {
                PlatformSupport.makeAgnosticDialog(this, okBtn, cancelBtn);
            }
        }

        pack();
        setLocationRelativeTo(parent);
    }

    public static final Icon getDefaultIcon() {
        if (defaultIcon == null) {
            defaultIcon = resources.ResourceKit.getIcon("application/64.png");
        }
        return defaultIcon;
    }

    private static Icon defaultIcon;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        topSpacer = new javax.swing.JLabel();
        icon = new javax.swing.JLabel();
        iconSpacer = new javax.swing.JLabel();
        rightSpacer = new javax.swing.JLabel();
        okCancelPanel = new javax.swing.JPanel();
        cancelBtn = new javax.swing.JButton();
        okBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 0, 0);
        getContentPane().add(topSpacer, gridBagConstraints);

        icon.setIcon( getDefaultIcon() );
        icon.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 8, 0, 8);
        getContentPane().add(icon, gridBagConstraints);
        icon.getAccessibleContext().setAccessibleName("icon");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipady = 90;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        getContentPane().add(iconSpacer, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 8);
        getContentPane().add(rightSpacer, gridBagConstraints);

        cancelBtn.setText(string("cancel")); // NOI18N

        okBtn.setText(string("plug-ok")); // NOI18N

        javax.swing.GroupLayout okCancelPanelLayout = new javax.swing.GroupLayout(okCancelPanel);
        okCancelPanel.setLayout(okCancelPanelLayout);
        okCancelPanelLayout.setHorizontalGroup(
            okCancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, okCancelPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelBtn)
                .addContainerGap())
        );

        okCancelPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelBtn, okBtn});

        okCancelPanelLayout.setVerticalGroup(
            okCancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, okCancelPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(okCancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn)
                    .addComponent(okBtn))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
        getContentPane().add(okCancelPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel icon;
    private javax.swing.JLabel iconSpacer;
    private javax.swing.JButton okBtn;
    private javax.swing.JPanel okCancelPanel;
    private javax.swing.JLabel rightSpacer;
    private javax.swing.JLabel topSpacer;
    // End of variables declaration//GEN-END:variables

    @Override
    public void handleOKAction(ActionEvent e) {
        pressed = 1;
        dispose();
    }

    @Override
    public void handleCancelAction(ActionEvent e) {
        pressed = 0;
        dispose();
    }

    private int pressed = -1;

    public int getCloseButton() {
        return pressed;
    }

    @Override
    public void setVisible(boolean visible) {
        if (visible) {
            pressed = -1;
        }
        super.setVisible(visible);
    }

    public JButton getOKButton() {
        if (hasOK && hasCancel) {
            return PlatformSupport.getAgnosticOK(true, okBtn, cancelBtn);
        } else if (hasOK) {
            return okBtn;
        }
        return null;
    }

    public JButton getCancelButton() {
        if (hasOK && hasCancel) {
            return PlatformSupport.getAgnosticCancel(true, okBtn, cancelBtn);
        } else if (hasCancel) {
            return okBtn;
        }
        return null;
    }

    private boolean hasOK = true, hasCancel = true;

    public int showDialog() {
        setVisible(true);
        return pressed;
    }

    public Component getContent() {
        return content;
    }
    private final Component content;
}
