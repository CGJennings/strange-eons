package ca.cgjennings.apps.arkham.plugins.catalog;

import ca.cgjennings.apps.arkham.AbstractGameComponentEditor;
import ca.cgjennings.apps.arkham.StrangeEons;
import java.awt.Cursor;
import javax.swing.ImageIcon;
import static resources.Language.string;
import resources.ResourceKit;
import resources.Settings;

/**
 * Dialog used to configure options for automatic update checks.
 *
 * @author Chris Jennings <https://cgjennings.ca/contact>
 * @since 2.1
 */
@SuppressWarnings("serial")
public class ConfigureUpdatesDialog extends javax.swing.JDialog {

    /**
     * Creates new form CoreUpdateDialog
     */
    public ConfigureUpdatesDialog() {
        super(StrangeEons.getWindow(), ModalityType.TOOLKIT_MODAL);
        initComponents();
        AbstractGameComponentEditor.localizeComboBoxLabels(frequencyCombo, null);
        AbstractGameComponentEditor.localizeComboBoxLabels(actionCombo, null);
        banner.setIcon(new ImageIcon(
                ResourceKit.createBleedBanner(((ImageIcon) banner.getIcon()).getImage())
        ));
        setLocationRelativeTo(getParent());

        Settings s = Settings.getUser();
        s.set("core-dialog-shown", "yes");
        //doNotShowCheck.setSelected( s.getYesNo( "core-dialog-autoinstall" ) );

        frequencyCombo.setSelectedIndex(AutomaticUpdater.getUpdateFrequency());
        actionCombo.setSelectedIndex(AutomaticUpdater.getUpdateAction() == 0 ? 0 : 1);
        newPluginsCheck.setSelected(AutomaticUpdater.isShowingNewPlugins());
        appUpdateCheck.setSelected(AutomaticUpdater.isShowingAppUpdates());
        doneInit = true;
    }

    private final boolean doneInit;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        banner = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        frequencyCombo = new javax.swing.JComboBox<>();
        newPluginsCheck = new javax.swing.JCheckBox();
        actionLabel = new javax.swing.JLabel();
        appUpdateCheck = new javax.swing.JCheckBox();
        actionCombo = new javax.swing.JComboBox<>();
        checkNowBtn = new javax.swing.JButton();
        helpBtn = new ca.cgjennings.ui.JHelpButton();
        updateStatusLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(string( "core-config-title" )); // NOI18N
        setResizable(false);

        banner.setBackground(java.awt.Color.gray);
        banner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/application/app-banner.jpg"))); // NOI18N
        banner.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        banner.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, java.awt.Color.gray));
        banner.setIconTextGap(0);
        banner.setOpaque(true);
        getContentPane().add(banner, java.awt.BorderLayout.WEST);

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD, jLabel1.getFont().getSize()+4));
        jLabel1.setText(string( "core-config-title" )); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, java.awt.Color.gray));

        cancelBtn.setText(string( "close" )); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(string( "core-p-autoupdate" ))); // NOI18N

        jLabel2.setText(string( "core-l-freq" )); // NOI18N

        frequencyCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "core-autoupdate-never", "core-autoupdate-monthly", "core-autoupdate-weekly", "core-autoupdate-daily" }));
        frequencyCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frequencyComboActionPerformed(evt);
            }
        });

        newPluginsCheck.setText(string( "core-b-new-plugins" )); // NOI18N
        newPluginsCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPluginsCheckActionPerformed(evt);
            }
        });

        actionLabel.setText(string( "core-autoupdate-action" )); // NOI18N

        appUpdateCheck.setText(string( "core-b-app-update" )); // NOI18N
        appUpdateCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appUpdateCheckActionPerformed(evt);
            }
        });

        actionCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "core-autoupdate-no-action", "core-autoupdate-install" }));
        actionCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newPluginsCheck)
                    .addComponent(jLabel2)
                    .addComponent(actionLabel)
                    .addComponent(appUpdateCheck)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(frequencyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frequencyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(actionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(newPluginsCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(appUpdateCheck)
                .addContainerGap())
        );

        checkNowBtn.setFont(checkNowBtn.getFont().deriveFont(checkNowBtn.getFont().getStyle() | java.awt.Font.BOLD, checkNowBtn.getFont().getSize()+1));
        checkNowBtn.setText(string( "core-b-check-now" )); // NOI18N
        checkNowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkNowBtnActionPerformed(evt);
            }
        });

        helpBtn.setHelpPage("plugins-updates");

        updateStatusLabel.setFont(updateStatusLabel.getFont().deriveFont(updateStatusLabel.getFont().getStyle() | java.awt.Font.BOLD, updateStatusLabel.getFont().getSize()-1));
        updateStatusLabel.setText("    ");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(helpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 366, Short.MAX_VALUE)
                        .addComponent(cancelBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkNowBtn)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(updateStatusLabel)))))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(checkNowBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateStatusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancelBtn)
                    .addComponent(helpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void actionComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionComboActionPerformed
            if (!doneInit) {
                return;
            }
            AutomaticUpdater.setUpdateAction(actionCombo.getSelectedIndex() == 0 ? 0 : 2);
	}//GEN-LAST:event_actionComboActionPerformed

	private void checkNowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkNowBtnActionPerformed
            int foundUpdates = 0;
            boolean oldAppSetting = AutomaticUpdater.isShowingAppUpdates();
            boolean oldNewSetting = AutomaticUpdater.isShowingNewPlugins();
            StrangeEons.setWaitCursor(true);
            getGlassPane().setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            getGlassPane().setVisible(true);
            try {
                checkNowBtn.setEnabled(false);
                AutomaticUpdater.setShowingAppUpdates(true);
                AutomaticUpdater.setShowingNewPlugins(true);
                foundUpdates = AutomaticUpdater.performUpdate(AutomaticUpdater.getUpdateAction(), false);
            } finally {
                AutomaticUpdater.setShowingAppUpdates(oldAppSetting);
                AutomaticUpdater.setShowingNewPlugins(oldNewSetting);
                getGlassPane().setVisible(false);
                getGlassPane().setCursor(Cursor.getDefaultCursor());
                StrangeEons.setWaitCursor(false);
                //checkNowBtn.setEnabled( true );
            }

            if (foundUpdates == 0) {
                updateStatusLabel.setText(string("core-l-no-update-desc"));
                updateStatusLabel.setIcon(CatalogDialog.ICON_UP_TO_DATE);
            } else if (foundUpdates < 0) {
                updateStatusLabel.setText(string("cat-err"));
                updateStatusLabel.setIcon(ResourceKit.getIcon("ui/error.png"));
            } else {
                dispose();
            }
	}//GEN-LAST:event_checkNowBtnActionPerformed

	private void frequencyComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frequencyComboActionPerformed
            if (doneInit) {
                AutomaticUpdater.setUpdateFrequency(frequencyCombo.getSelectedIndex());
            }
            boolean enable = frequencyCombo.getSelectedIndex() > 0;
            actionLabel.setEnabled(enable);
            actionCombo.setEnabled(enable);
            newPluginsCheck.setEnabled(enable);
            appUpdateCheck.setEnabled(enable);
	}//GEN-LAST:event_frequencyComboActionPerformed

	private void newPluginsCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPluginsCheckActionPerformed
            if (!doneInit) {
                return;
            }
            AutomaticUpdater.setShowingNewPlugins(newPluginsCheck.isSelected());
	}//GEN-LAST:event_newPluginsCheckActionPerformed

	private void appUpdateCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appUpdateCheckActionPerformed
            if (!doneInit) {
                return;
            }
            AutomaticUpdater.setShowingAppUpdates(appUpdateCheck.isSelected());
	}//GEN-LAST:event_appUpdateCheckActionPerformed

	private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
            dispose();
	}//GEN-LAST:event_cancelBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> actionCombo;
    private javax.swing.JLabel actionLabel;
    private javax.swing.JCheckBox appUpdateCheck;
    private javax.swing.JLabel banner;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton checkNowBtn;
    private javax.swing.JComboBox<String> frequencyCombo;
    private ca.cgjennings.ui.JHelpButton helpBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JCheckBox newPluginsCheck;
    private javax.swing.JLabel updateStatusLabel;
    // End of variables declaration//GEN-END:variables

}
